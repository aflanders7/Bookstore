<! -- 
Citation for the following HTML page:
Date: 7/25/2023
Adapted from CS340 Canvas Page: Web Application Technology. Used example structure to make own HTML pages, and copied view functions used for inserting, updating, deleting and showing specific forms.
URL: https://canvas.oregonstate.edu/courses/1922991/pages/exploration-web-application-technology?module_item_id=23329626

Citation for displaying the data:
Date: 8/11/23
Adapted from from OSU CS 340 nodejs-starter-app Step 4, attribute names and table header layout are our own work
Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data

Citation for the adding data form:
Date: 8/11/23
Adapted from from OSU CS 340 nodejs-starter-app Step 5, labels and ids are our own work
Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%205%20-%20Adding%20New%20Data

-->

<html>

<title>Customers</title>


<body>
<h1>Customers</h1>

<!-- Display customers in a table -->

<div id="browse" style="display: block">
  <table border="1" cellpadding="5" id="customers-table">
    <thead>
        <tr>
          <th>Customer ID</th>
          <th>Name</th>
          <th>Email</th>
            <!-- <th>delete</th> -->
        </tr>
    </thead>
  
    {{!-- Body section --}}
    <tbody>
        {{#each data}}
        <tr data-value={{this.customerID}}>
            <td>{{this.customerID}}</td>
            <td>{{this.customerName}}</td>
            <td>{{this.customerEmail}}</td>
        </tr>
        {{/each}}
    </tbody>
  </table>

<p>&nbsp;</p>
</div> 

<!-- search customers -->


  <h2>Search Customers</h2>
  <p>Search for customers by name. Partial names are accepted. Click "Reset" to reset the table. <br>
  <strong>Note: </strong>If a customer is not found within the database, their customer information must be added before their sale can be processed.</p>

  <form id="search-customer-html" method='GET' action='/customers'>
      <label for="inputcustomerName">Search by Customer Name: </label>
      <input type="text" name="inputcustomerName" id="inputcustomerName">
      
      <input type="submit">
      <a href='/customers'><button class = "merch">Reset</button></a>
  </form>


<p>&nbsp;</p>

<!-- insert new customer -->

<h2>Add New Customer</h2>
<p>Add a new customer to the database.</p>
<form id="add-customer-form" method="POST" action="/add-customer-form">
    <label for="input-customerName" class="required">Customer Name: </label>
    <input type="text" name="input-customerName" id="input-customerName" required>
    
    <label for="input-customerEmail">Email: </label>
    <input type="text" name="input-customerEmail" id="input-customerEmail">

    <input type="submit">
</form>
<p>&nbsp;</p>


</body>
</html>
